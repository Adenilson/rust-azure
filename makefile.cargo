ifeq (androideabi,$(findstring androideabi,$(TARGET)))

CXX := $(TARGET)-g++
AR := $(TARGET)-ar

else

CXX ?= g++
AR ?= ar

endif

ifeq (darwin,$(findstring darwin,$(TARGET)))
    OSTYPE=darwin
endif
ifeq (linux,$(findstring linux,$(TARGET)))
    OSTYPE=linux
endif
ifeq (androideabi,$(findstring androideabi,$(TARGET)))
    OSTYPE=android
endif

MOZALLOC_CPP_SRC = \
	libazure/src/memory/mozalloc/mozalloc_abort.cpp \
	libazure/src/memory/mozalloc/mozalloc.cpp \
	libazure/src/memory/mozalloc/mozalloc_oom.cpp \
	$(NULL)

AZURE_CPP_SRC = \
	$(addprefix libazure/src/gfx/2d/,\
		Blur.cpp \
		DrawEventRecorder.cpp \
		DrawTargetRecording.cpp \
		Factory.cpp \
		ImageScaling.cpp \
		Matrix.cpp \
		PathRecording.cpp \
		RecordedEvent.cpp \
		Rect.cpp \
		Scale.cpp \
		ScaledFontBase.cpp \
		SourceSurfaceRawData.cpp \
		convolver.cpp \
		image_operations.cpp)

ifneq (arm,$(findstring arm,$(TARGET)))
    AZURE_CPP_SRC += $(addprefix libazure/src/gfx/2d/, ImageScalingSSE2.cpp)
endif
AZURE_CPP_SRC += src/azure-c.cpp

ifeq ($(CFG_ENABLE_DEBUG_SKIA),1)
CXXFLAGS += \
	-g \
	-DSK_DEBUG \
	-DGR_DEBUG=1 \
	-DGR_GL_LOG_CALLS=1 \
	-DGR_GL_LOG_CALLS_START=1 \
	$(NULL)
else
CXXFLAGS += \
	-O3 \
	-DSK_RELEASE \
	-DGR_RELEASE=1 \
	$(NULL)
endif

#SSE2 instruction support required.
CXXFLAGS += \
	-fPIC \
	-Ilibazure/include \
	-Ilibazure/include/mozilla/gfx \
	-Ilibazure/include/mozilla/ipc/chromium/src \
	-Ilibazure/include/mozilla/xpcom/base \
	-Ilibazure/include/mozilla/xpcom/build \
	-Ilibazure/include/mozilla/xpcom/glue \
	-Ilibazure/include/mozilla/xpcom/string/public \
	-DMOZ_GFX \
	-DNS_ATTR_MALLOC="" -DNS_WARN_UNUSED_RESULT="" \
	$(NULL)

#SSE2 instruction support required.
ifneq (arm,$(findstring arm,$(TARGET)))
    CXXFLAGS += -msse2
endif

AZURE_CPP_SRC += \
	$(addprefix libazure/src/gfx/2d/,\
		DrawTargetSkia.cpp \
		PathSkia.cpp \
		SourceSurfaceSkia.cpp)

SKIA_OUTDIR = $(shell find $(OUT_DIR)/.. -name 'skia-sys-*' -type d)
CXXFLAGS += \
	-iquote $(SKIA_OUTDIR)/include/core \
	-iquote $(SKIA_OUTDIR)/include/config \
	-iquote $(SKIA_OUTDIR)/include/effects \
	-iquote $(SKIA_OUTDIR)/include/ports \
	-iquote $(SKIA_OUTDIR)/include/utils \
	-iquote $(SKIA_OUTDIR)/include/gpu \
	-iquote $(SKIA_OUTDIR)/include/gpu/gl \
	-DUSE_SKIA \
	-DUSE_SKIA_GPU \
	$(NULL)

USE_CLANG = $(shell $(CXX) --version|grep -c 'clang')

ifeq ($(USE_CLANG),1)
    CXXFLAGS += -Wno-c++11-extensions
endif

ifeq ($(OSTYPE),darwin)
CXXFLAGS += \
	-DXP_MACOSX \
	-DXP_UNIX \
	-DMALLOC_H="<malloc/malloc.h>" \
	-Ilibazure/include/mozilla/gfx/gl \
	$(NULL)

AZURE_CPP_SRC += \
	libazure/src/gfx/2d/ScaledFontMac.cpp \
	libazure/src/gfx/2d/DrawTargetCG.cpp \
	libazure/src/gfx/2d/PathCG.cpp \
	libazure/src/gfx/2d/SourceSurfaceCG.cpp \
	$(NULL)

AZURE_OBJCPP_SRC = libazure/src/gfx/2d/QuartzSupport.mm
endif

ifeq ($(OSTYPE),linux)
CXXFLAGS += \
	-DXP_UNIX \
	$(NULL)
AZURE_OBJCPP_SRC =

CXXFLAGS += -DMOZ_ENABLE_FREETYPE
AZURE_CPP_SRC += \
	$(addprefix libazure/src/gfx/2d/,\
		ScaledFontFreetype.cpp)
endif

ifeq ($(OSTYPE),android)
    CXXFLAGS += \
    -DXP_UNIX \
    -DSK_BUILD_FOR_ANDROID \
    $(NULL)
    AZURE_OBJCPP_SRC =

    CXXFLAGS += -DMOZ_ENABLE_FREETYPE
    AZURE_CPP_SRC += \
        $(addprefix libazure/src/gfx/2d/,\
            ScaledFontFreetype.cpp)
endif

ALL_CPP_SRC = $(MOZALLOC_CPP_SRC) $(AZURE_CPP_SRC)
ALL_OBJCPP_SRC = $(AZURE_OBJCPP_SRC)
ALL_OBJS = $(ALL_CPP_SRC:%.cpp=$(OUT_DIR)/%.o) $(ALL_OBJCPP_SRC:%.mm=$(OUT_DIR)/%.o)

.PHONY: all
all: $(OUT_DIR)/libazure.a

$(OUT_DIR)/%.o: %.cpp
	mkdir -p `dirname $@` && $(CXX) $< -o $@ -c $(CXXFLAGS)

$(OUT_DIR)/%.o: %.mm
	mkdir -p `dirname $@` && $(CXX) -ObjC++ $< -o $@ -c $(CXXFLAGS)

$(OUT_DIR)/libazure.a: $(ALL_OBJS)
	$(AR) rcs $@ $(ALL_OBJS)
