VPATH=%VPATH%
USE_SKIA=%USE_SKIA%
USE_CAIRO=%USE_CAIRO%

CC ?= gcc
CXX ?= g++
CXXFLAGS ?= -g
AR ?= ar
RUSTC ?= rustc
RUSTFLAGS ?=

UNAME=$(shell uname)

ifeq ($(UNAME),Darwin)
    OSTYPE=darwin
endif
ifeq ($(UNAME),Linux)
    OSTYPE=linux
endif

MOZALLOC_CPP_SRC = \
	src/memory/mozalloc/mozalloc_abort.cpp \
	src/memory/mozalloc/mozalloc.cpp \
	src/memory/mozalloc/mozalloc_oom.cpp \
	$(NULL)

AZURE_CPP_SRC = \
	$(addprefix src/2d/,\
		Blur.cpp \
		DrawEventRecorder.cpp \
		DrawTargetRecording.cpp \
		Factory.cpp \
		ImageScaling.cpp \
		ImageScalingSSE2.cpp \
		Matrix.cpp \
		PathRecording.cpp \
		RecordedEvent.cpp \
		Rect.cpp \
		Scale.cpp \
		ScaledFontBase.cpp \
		SourceSurfaceRawData.cpp \
		convolver.cpp \
		image_operations.cpp)

AZURE_CPP_SRC += azure-c.cpp

#SSE2 instruction support required.
CXXFLAGS += \
	-fPIC \
	-msse2 \
	-I$(VPATH)/include \
	-I$(VPATH)/include/gl \
	-I$(VPATH)/include/chromium \
	-iquote $(VPATH)/include/mozilla/gfx \
	-DMOZ_GFX \
	-DNS_ATTR_MALLOC="" -DNS_WARN_UNUSED_RESULT="" \
	$(NULL)

ifeq ($(USE_SKIA),1)
AZURE_CPP_SRC += \
	$(addprefix src/2d/,\
		DrawTargetSkia.cpp \
		PathSkia.cpp \
		SourceSurfaceSkia.cpp)

CXXFLAGS += \
	-iquote $(VPATH)/../skia/include/core \
	-iquote $(VPATH)/../skia/include/config \
	-iquote $(VPATH)/../skia/include/effects \
	-iquote $(VPATH)/../skia/include/ports \
	-DUSE_SKIA \
	$(NULL)
endif

ifeq ($(USE_CAIRO),1)
AZURE_CPP_SRC += \
	$(addprefix src/2d/,\
		DrawTargetCairo.cpp \
		PathCairo.cpp \
		SourceSurfaceCairo.cpp)

CXXFLAGS += \
	-DUSE_CAIRO \
	$(NULL)
endif

ifeq ($(OSTYPE),darwin)

ifeq ($(USE_CAIRO),1)
# FIXME: This is not the right way to set up the lib location
RUSTFLAGS += -L/opt/local/lib \
	-L /usr/local/Cellar/cairo/1.12.6/lib \
	$(NULL)

CXXFLAGS += \
	-I/usr/local/Cellar/cairo/1.12.6/include/cairo \
	-I/opt/local/include/cairo \
	$(NULL)
endif

CXXFLAGS += \
	-DXP_MACOSX \
	-DXP_UNIX \
	-DMALLOC_H="<malloc/malloc.h>" \
	$(NULL)

AZURE_CPP_SRC += \
	src/2d/ScaledFontMac.cpp \
	src/2d/DrawTargetCG.cpp \
	src/2d/PathCG.cpp \
	src/2d/SourceSurfaceCG.cpp \
	$(NULL)
AZURE_OBJCPP_SRC = src/2d/QuartzSupport.mm
endif

ifeq ($(OSTYPE),linux)
CXXFLAGS += \
	-I/usr/include/cairo \
	-DXP_UNIX \
	$(NULL)
AZURE_OBJCPP_SRC =
endif

ALL_CPP_SRC = $(MOZALLOC_CPP_SRC) $(AZURE_CPP_SRC)
ALL_OBJCPP_SRC = $(AZURE_OBJCPP_SRC)
ALL_OBJS = $(ALL_CPP_SRC:%.cpp=%.o) $(ALL_OBJCPP_SRC:%.mm=%.o)

RUST_SRC=$(shell find $(VPATH)/. -type f -name '*.rs')

.PHONY: all
all: libazure.dummy

%.o: %.cpp
	$(CXX) $< -o $@ -c $(CXXFLAGS)

%.o: %.mm
	$(CXX) -ObjC++ $< -o $@ -c $(CXXFLAGS)

libazure.dummy: azure.rc $(RUST_SRC) libazure.a
	$(RUSTC) $(RUSTFLAGS) $< -o $@
	touch $@

azure-test: azure.rc $(RUST_SRC) libazure.a
	$(RUSTC) $(RUSTFLAGS) $< -o $@ --test

libazure.a: $(ALL_OBJS)
	$(AR) rcs libazure.a $(ALL_OBJS)

check: azure-test
	./azure-test

.PHONY: clean
clean:
	rm -f azure-test *.o *.a */*/*.o */*/*/*.o *.so *.dylib *.dll *.dummy
